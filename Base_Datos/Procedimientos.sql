DELIMITER //
CREATE PROCEDURE iniciar_sesion(
IN CEDULA_P BIGINT,
IN CONTRASENA_P VARCHAR(25)
)
BEGIN
	SELECT CEDULA, NOMBRE, CONTRASENA, TIPO_USUARIO, ESTADO FROM USUARIO
    WHERE CEDULA_P = CEDULA
    AND CONTRASENA_P = CONTRASENA
    AND ESTADO = 'ACTIVO';
END //
DELIMITER ;
CALL iniciar_sesion (1147484290,'developer.admin');
-- DROP PROCEDURE iniciar_sesion;
DELIMITER //
CREATE PROCEDURE PANEL_ADMIN()
BEGIN
    SELECT (SELECT COUNT(TIPO_USUARIO = 'CLIENTE' AND ESTADO = 'ACTIVO') FROM USUARIO)  AS NUM_CLIENTES,
    (SELECT COUNT(ESTADO_PRODUCTO = 'DISPONIBLE') FROM PRODUCTO) AS PRODUCTOS_STOCK,
    (SELECT COUNT(MONTH(FECHA_MOVIMIENTO) = MONTH(CURDATE()) AND ESTADO_MOVIMIENTO = 'REALIZADO' AND TIPO_MOVIMIENTO = 'VENTA') FROM MOVIMIENTO) AS VENTAS_MES,
    (SELECT COUNT(TIPO_MOVIMIENTO = 'DEUDA' AND ESTADO_MOVIMIENTO = 'PENDIENTE') FROM MOVIMIENTO) AS DEUDAS;
END //
DELIMITER ;
CALL PANEL_ADMIN;
-- DROP PROCEDURE PANEL_ADMIN;

DELIMITER //
CREATE PROCEDURE crear_cliente(
	IN CEDULA_P BIGINT,
    IN NOMBRE_P VARCHAR(25),
    IN APELLIDO_P VARCHAR(25),
    IN CONTRASENA_P VARCHAR(25),
    IN CORREO_P VARCHAR(60),
    IN TIPO_USUARIO_P VARCHAR(13),
    IN TELEFONO_P INT,
    IN GENERO_P VARCHAR(9),
    IN FECHA_NAC_P DATE
)
BEGIN
	INSERT INTO USUARIO (CEDULA,NOMBRE,APELLIDO,CONTRASENA,CORREO,TIPO_USUARIO,TELEFONO,GENERO,FECHA_NACIMIENTO)
    VALUES (CEDULA_P,NOMBRE_P,APELLIDO_P,CONTRASENA_P,CORREO_P,TIPO_USUARIO_P,TELEFONO_P,GENERO_P,FECHA_NAC_P);
END//
DELIMITER ;
CALL crear_cliente(4512364789, 'usuario', 'prueba', 'contra_prueba','correo_prueba@hotmail.com','CLIENTE','3238649182','otro','2000-01-03');
-- DROP PROCEDURE crear_cliente;
DELIMITER //
CREATE PROCEDURE ver_clientes()
BEGIN
	SELECT CEDULA,NOMBRE,APELLIDO,CORREO,TELEFONO,GENERO,FECHA_NACIMIENTO,ESTADO FROM USUARIO WHERE TIPO_USUARIO = 'CLIENTE';
END//
DELIMITER ;
CALL ver_clientes;
DROP PROCEDURE ver_clientes;

DELIMITER //
CREATE PROCEDURE actualizar_cliente(
	IN CEDULA_P BIGINT,
    IN NOMBRE_P VARCHAR(25),
    IN APELLIDO_P VARCHAR(25),
    IN CORREO_P VARCHAR(60),
    IN TELEFONO_P INT,
    IN GENERO_P VARCHAR(9),
    IN FECHA_NAC_P DATE,
    IN ESTADO_P VARCHAR(10)
)
BEGIN
	UPDATE USUARIO SET NOMBRE = NOMBRE_P, APELLIDO = APELLIDO_P, CORREO = CORREO_P, TELEFONO = TELEFONO_P, GENERO = GENERO_P, FECHA_NACIMIENTO = FECHA_NAC_P, ESTADO = ESTADO_P
    WHERE CEDULA = CEDULA_P;
END//
DELIMITER ;
DROP PROCEDURE actualizar_cliente;
DELIMITER //

CREATE FUNCTION DeudaConMora(CEDULA BIGINT)
RETURNS DECIMAL(10,2)
DETERMINISTIC
READS SQL DATA
BEGIN
  DECLARE TOTAL DECIMAL(10,2);

  SELECT SUM(
    SALDO +
    (CASE
      WHEN DATEDIFF(CURDATE(), FECHA_VENCIMIENTO) > 0
      THEN SALDO * 0.01 * FLOOR(DATEDIFF(CURDATE(), FECHA_VENCIMIENTO) / 7)
      ELSE 0
    END)
  )
  INTO TOTAL
  FROM DETALLE_DEUDAS DD
  JOIN MOVIMIENTO M ON DD.MOVIMIENTO = M.ID_MOVIMIENTO
  WHERE M.CLIENTE = CEDULA;

  RETURN IFNULL(TOTAL, 0);
END;
//

DELIMITER //

CREATE FUNCTION TotalGastoProveedorUltimoMes(ID_PROVEEDOR INT)
RETURNS DECIMAL(10,2)
DETERMINISTIC
READS SQL DATA
BEGIN
  DECLARE TOTAL DECIMAL(10,2);

  SELECT IFNULL(SUM(M.VALOR_MOVIMIENTO), 0)
  INTO TOTAL
  FROM MOVIMIENTO M
  JOIN DETALLE_COMPRA DC ON M.ID_MOVIMIENTO = DC.MOVIMIENTO
  WHERE DC.PROVEEDOR = ID_PROVEEDOR
    AND M.TIPO_MOVIMIENTO = 'COMPRA'
    AND M.FECHA_MOVIMIENTO >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);

  RETURN TOTAL;
END;
//

DELIMITER $$

CREATE PROCEDURE RegistrarProductos (
  IN P_VALOR_PRODUCTO MEDIUMINT,
  IN P_CANT_PRODUCTO SMALLINT,
  IN P_PRODUCTO TINYINT,
  IN P_MOVIMIENTO SMALLINT
)
BEGIN
  DECLARE TOTAL INT;

  INSERT INTO DETALLE_COMPRA (CANTIDAD_COMPRADA, PROVEEDOR, MOVIMIENTO, PRODUCTO_COMPRADO)
  VALUES (P_CANT_PRODUCTO, 
          (SELECT PROVEEDOR FROM DETALLE_COMPRA WHERE MOVIMIENTO = P_MOVIMIENTO LIMIT 1), 
          P_MOVIMIENTO, P_PRODUCTO);

  UPDATE PRODUCTO
  SET CANTIDAD_DISPONIBLE = CANTIDAD_DISPONIBLE + P_CANT_PRODUCTO
  WHERE ID_PRODUCTO = P_PRODUCTO;

  SET TOTAL = P_VALOR_PRODUCTO * P_CANT_PRODUCTO;

  UPDATE MOVIMIENTO
  SET VALOR_MOVIMIENTO = VALOR_MOVIMIENTO + TOTAL
  WHERE ID_MOVIMIENTO = P_MOVIMIENTO;
END$$

DELIMITER $$

CREATE PROCEDURE RegistrarVenta (
  IN P_CLIENTE BIGINT,
  IN P_DESCUENTO TINYINT,
  IN P_CANTIDAD SMALLINT,
  IN P_PRODUCTO TINYINT,
  IN P_VALOR_UNIT SMALLINT
)
BEGIN
  DECLARE NUEVO_ID SMALLINT;
  DECLARE TOTAL DECIMAL(10,2);

  SET TOTAL = P_CANTIDAD * P_VALOR_UNIT;
  IF P_DESCUENTO IS NOT NULL THEN
    SET TOTAL = TOTAL - (TOTAL * P_DESCUENTO / 100);
  END IF;

  INSERT INTO MOVIMIENTO (VALOR_MOVIMIENTO, FECHA_MOVIMIENTO, ESTADO_MOVIMIENTO, DESCUENTO, TIPO_MOVIMIENTO, CLIENTE)
  VALUES (TOTAL, CURDATE(), 'REALIZADO', P_DESCUENTO, 'VENTA', P_CLIENTE);

  SET NUEVO_ID = LAST_INSERT_ID();

  INSERT INTO DETALLE_VENTA (CANTIDAD_VENDIDA, MOVIMIENTO, PRODUCTO_VENDIDO)
  VALUES (P_CANTIDAD, NUEVO_ID, P_PRODUCTO);

  UPDATE PRODUCTO
  SET CANTIDAD_DISPONIBLE = CANTIDAD_DISPONIBLE - P_CANTIDAD
  WHERE ID_PRODUCTO = P_PRODUCTO;
END$$

DELIMITER $$

CREATE PROCEDURE RegistrarDeuda (
  IN P_CLIENTE BIGINT,
  IN P_CANTIDAD SMALLINT,
  IN P_PRODUCTO TINYINT,
  IN P_SALDO INT,
  IN P_FECHA_VENCIMIENTO DATE
)
BEGIN
  DECLARE NUEVO_ID SMALLINT;

  INSERT INTO MOVIMIENTO (VALOR_MOVIMIENTO, FECHA_MOVIMIENTO, ESTADO_MOVIMIENTO, DESCUENTO, TIPO_MOVIMIENTO, CLIENTE)
  VALUES (P_SALDO, CURDATE(), 'PENDIENTE', NULL, 'DEUDA', P_CLIENTE);

  SET NUEVO_ID = LAST_INSERT_ID();

  INSERT INTO DETALLE_DEUDAS (SALDO, CANTIDAD_DEUDA, FECHA_VENCIMIENTO, MOVIMIENTO, PRODUCTO_PENDIENTE)
  VALUES (P_SALDO, P_CANTIDAD, P_FECHA_VENCIMIENTO, NUEVO_ID, P_PRODUCTO);

  UPDATE PRODUCTO
  SET CANTIDAD_DISPONIBLE = CANTIDAD_DISPONIBLE - P_CANTIDAD
  WHERE ID_PRODUCTO = P_PRODUCTO;
END$$

DELIMITER ;
